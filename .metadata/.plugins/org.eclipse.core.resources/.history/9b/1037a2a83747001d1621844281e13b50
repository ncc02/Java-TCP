import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.List;

import javax.swing.*;

public class CaroClient extends JFrame implements Runnable,MouseListener {

	public static void main(String[] args) throws UnknownHostException, IOException {
		new CaroClient();

	}

	DataInputStream dis;
	DataOutputStream dos;
	int n= 15;
	int s= 30;
	int of= 50;
	List<Point> visited= new ArrayList<Point>();
	
	public CaroClient() throws UnknownHostException, IOException {
		this.setTitle("Co caro eclipse");
		this.setSize(n*s + 2*of, n*s + 2*of);
		this.setDefaultCloseOperation(3);
		this.addMouseListener((MouseListener) this);
		
//		Socket soc= new Socket("192.168.1.4", 5000);
//		dis	= new DataInputStream(soc.getInputStream());
//		dos	= new DataOutputStream(soc.getOutputStream());
//		
		//new Thread(this).start();
		
		this.setVisible(true);
	}
	
	public void run() {
//		while(true) {
//			try {
//				String s= dis.readUTF();
//				int ix= Integer.parseInt(s.split(",")[0]);
//				int iy= Integer.parseInt(s.split(",")[1]);
//				visited.add(new Point(ix, iy));
				
				this.repaint();
//			}catch(Exception e) {}
//		}
	}
	
	public void paint(Graphics g) {
		g.setColor(Color.white);
		g.fillRect(0, 0, this.getWidth(), this.getHeight()); //ve hinh toa do 0,0 chieu dai va cao
		
		g.setColor(Color.white);
		for(int i=0; i<=15; i++) {
			g.drawLine(of, of+i*s, of+n*s, of+i*s);
			g.drawLine(of+i*s, of, of+i*s, of+n*s);	
		}
		
		g.setFont(new Font("arial", Font.BOLD, s));
		int cnt= 0;
		for(Point p : visited) {
			int x= p.x*s + of;
			int y= p.y*s + of;
			String s; cnt++;
			if (cnt%2==1) {
				g.setColor(Color.red);
				s="X";
			}
			else {
				g.setColor(Color.blue);
				s="O";
			}
			g.drawString(s, x+5, y+25);
		}
	}
	
	public void mouseClicked(MouseEvent e){
		int x= e.getX();
		int y= e.getY();
		
		if (x < of || x > n*s+of) return;
		if (y < of || y > n*s+of) return;
		
		int ix = (x-of) / s;
		int iy = (y-of) / s;
		
		for(Point p : visited) {
			if (ix == p.x) return;
			if (iy == p.y) return;
		}
		
		visited.add(new Point(ix, iy));
		
		this.repaint();
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	
	
}



